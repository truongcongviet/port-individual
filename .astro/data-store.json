[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.4.2","content-config-digest","8a1b8c8cb3309619","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://example.me\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"prefetch\":true,\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null,[null,{\"themes\":[\"dracula\",\"github-light\"],\"useThemedScrollbars\":false,\"styleOverrides\":{\"frames\":{\"frameBoxShadowCssValue\":\"none\"},\"uiLineHeight\":\"inherit\",\"codeFontSize\":\"0.875rem\",\"codeLineHeight\":\"1.7142857rem\",\"borderRadius\":\"4px\",\"codePaddingInline\":\"1rem\",\"codeFontFamily\":\"ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\"}}]],\"rehypePlugins\":[[null,{\"target\":\"_blank\",\"rel\":[\"nofollow, noopener, noreferrer\"]}]],\"remarkRehype\":{\"footnoteLabelProperties\":{\"className\":[\"\"]}},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","post",["Map",11,12,66,67,140,141,233,234],"actions-and-blinks",{"id":11,"data":13,"body":22,"filePath":23,"assetImports":24,"digest":26,"rendered":27,"legacyId":65},{"title":14,"description":15,"publishDate":16,"updatedDate":17,"draft":18,"tags":19},"Introduction to Solana Actions & Blinks","A Complete Preliminary Introduction to Solana Actions & Blinks",["Date","2025-02-21T17:00:00.000Z"],["Date","2025-02-21T17:00:00.000Z"],false,[20,21],"solana","blockchain","## Introduction\n\nToday, Solana Foundation announced the release of two innovative specifications — Actions & Blinks. This article is oriented towards non-technical participants in the Solana or any other Blockchain ecosystem with a superficial knowledge of how apps work.\n\n## Actions\n\nAn **Action** is an API that returns a Solana transaction to be viewed by the user and signed, and then executed on-chain. The transaction can be sent across various means like a button on a widget or website, QR codes similar to Solana Pay (It is built similar to Solana Pay specs, a look at the docs or codebase might show you that).\n\nSimply put, an Action is an API endpoint that will return metadata and prompts the user to sign with their wallet. It makes it simple for developers to integrate Solana blockchain transactions into their application’s user flow or even allowing users to interact with the blockchain without redirecting them from the app they were using like Twitter, Discord or even right here on Medium (If someone builds a provider for it, more on this later)\n\n### How Actions Work\n\nThe Actions API mostly consists of making HTTP requests to an Action URL endpoint and handling the responses that relate to the Action. A GET request returns metadata about what actions are available to the URL and an optional list of related actions, while a POST request returns a signable transaction that will be executed on-chain or on an off-chain service.\n\n#### Action API Flow\n\nThe way the flow works is:\n\n- You press a button or link or scan a QR code which prompts the Action Client to send a GET request to the Action Provider.\n\n- The provider responds with metadata and available actions and the client displays a UI with those actions\n\n- You interact with the Action and the client makes a POST request to the Provider with the pubkey you choose\n\n- The provider responds with a custom transaction and the client displays it on the UI\n\n- You approve the transaction and the sign it and the client sends the transaction to the blockchain and voilà!\n\nAs you can see, the client handles transaction submission and state management, including necessary validations and error handling. For example, if you want a certain transaction to only last a certain amount of time or be available to certain wallet addresses, actions also support a certain level of invalidation — The GET and POST request may return some metadata that states that the action cannot be executed (with a disabled field)\n\n## Blinks\n\n**Blinks** (short for blockchain links) extend the functionality of Solana Actions by turning them into shareable, metadata-rich links. These links enable clients, such as wallet extensions and bots, to present additional UI options for interacting with Solana Actions directly. Right now, Dialect is the most popular client provider that allows UI client modal rendering.\n\n### Linking Actions with Blinks\n\nA Blink can be linked to an Action in three ways:\n\n- Sharing an explicit Action URL like `solana-action:https://actions.alice.com/donate`. Here, only supported clients (like Dialect) can render the blink and there won’t be a fallback.\n\n- Sharing a link to a website linked to an Action API through an actions.json file on the root of the website.\n\n- Embedding the Action URL into the URL of a Blink provider (like Dialect) — https://blink.to/?action=\u003Caction_url>\n\n![Header Image](jupblink.png)\n\nHere you can see Jupiter’s Blink modal that uses an Action for buying DogWifHat tokens with Solana. The metadata specified in the action like buttons, description, etc. are displayed on the modal. For this to render, you need to download Dialect’s Blink Extension from the Chrome Web Store (Link at the end of the article). But in some cases, if you don’t have the extension installed it displays as a regular link as a fallback, so you can click on it to go to the client webpage with the same modal.\n\n## Uses of Actions & Blinks\n\nImagine you’re an artist who really like Farcaster frames but wish it was on Twitter as well. Now, you can create a Blink through Dialect linked to an Action that mints an NFT to the user. You post the Blink on Twitter and the client renders the mint page over the tweet similar to the Jupiter swap page. The same applies if you want to create a Donation blink for a charity, a DAO blink to get members of your DAO to vote easily on Twitter or a raffle blink to participate in sweepstakes!\n\nMost importantly, the Actions API helps streamline interacting on-chain to a simple set of HTTPS requests, which makes it easier for Web2 devs to integrate on-chain activity seamlessly into their application and not need to set up a whole token mint page or donation page on their own.\n\n## Important Links\n\nLearn more: [Solana Solutions](https://solana.com/solutions/actions)\n\nDocs: [Solana Docs](https://solana.com/docs/advanced/actions)\n\nGitHub Repo: [Solana Developers](https://github.com/solana-developers/solana-actions)\n\nDialect Extension: [Chrome Web Store](https://chromewebstore.google.com/detail/dialect-blinks/mhklkgpihchphohoiopkidjnbhdoilof)\n\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>","src/content/post/actions-and-blinks/index.md",[25],"jupblink.png","ed15ab2174ccaa78",{"html":28,"metadata":29},"\u003Ch2 id=\"introduction\">Introduction\u003C/h2>\n\u003Cp>Today, Solana Foundation announced the release of two innovative specifications — Actions &#x26; Blinks. This article is oriented towards non-technical participants in the Solana or any other Blockchain ecosystem with a superficial knowledge of how apps work.\u003C/p>\n\u003Ch2 id=\"actions\">Actions\u003C/h2>\n\u003Cp>An \u003Cstrong>Action\u003C/strong> is an API that returns a Solana transaction to be viewed by the user and signed, and then executed on-chain. The transaction can be sent across various means like a button on a widget or website, QR codes similar to Solana Pay (It is built similar to Solana Pay specs, a look at the docs or codebase might show you that).\u003C/p>\n\u003Cp>Simply put, an Action is an API endpoint that will return metadata and prompts the user to sign with their wallet. It makes it simple for developers to integrate Solana blockchain transactions into their application’s user flow or even allowing users to interact with the blockchain without redirecting them from the app they were using like Twitter, Discord or even right here on Medium (If someone builds a provider for it, more on this later)\u003C/p>\n\u003Ch3 id=\"how-actions-work\">How Actions Work\u003C/h3>\n\u003Cp>The Actions API mostly consists of making HTTP requests to an Action URL endpoint and handling the responses that relate to the Action. A GET request returns metadata about what actions are available to the URL and an optional list of related actions, while a POST request returns a signable transaction that will be executed on-chain or on an off-chain service.\u003C/p>\n\u003Ch4 id=\"action-api-flow\">Action API Flow\u003C/h4>\n\u003Cp>The way the flow works is:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>You press a button or link or scan a QR code which prompts the Action Client to send a GET request to the Action Provider.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>The provider responds with metadata and available actions and the client displays a UI with those actions\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>You interact with the Action and the client makes a POST request to the Provider with the pubkey you choose\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>The provider responds with a custom transaction and the client displays it on the UI\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>You approve the transaction and the sign it and the client sends the transaction to the blockchain and voilà!\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>As you can see, the client handles transaction submission and state management, including necessary validations and error handling. For example, if you want a certain transaction to only last a certain amount of time or be available to certain wallet addresses, actions also support a certain level of invalidation — The GET and POST request may return some metadata that states that the action cannot be executed (with a disabled field)\u003C/p>\n\u003Ch2 id=\"blinks\">Blinks\u003C/h2>\n\u003Cp>\u003Cstrong>Blinks\u003C/strong> (short for blockchain links) extend the functionality of Solana Actions by turning them into shareable, metadata-rich links. These links enable clients, such as wallet extensions and bots, to present additional UI options for interacting with Solana Actions directly. Right now, Dialect is the most popular client provider that allows UI client modal rendering.\u003C/p>\n\u003Ch3 id=\"linking-actions-with-blinks\">Linking Actions with Blinks\u003C/h3>\n\u003Cp>A Blink can be linked to an Action in three ways:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Sharing an explicit Action URL like \u003Ccode>solana-action:https://actions.alice.com/donate\u003C/code>. Here, only supported clients (like Dialect) can render the blink and there won’t be a fallback.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Sharing a link to a website linked to an Action API through an actions.json file on the root of the website.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Embedding the Action URL into the URL of a Blink provider (like Dialect) — \u003Ca href=\"https://blink.to/?action=\" rel=\"nofollow, noopener, noreferrer\" target=\"_blank\">https://blink.to/?action=\u003C/a>&#x3C;action_url>\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;jupblink.png&#x22;,&#x22;alt&#x22;:&#x22;Header Image&#x22;,&#x22;index&#x22;:0}\">\n\u003Cp>Here you can see Jupiter’s Blink modal that uses an Action for buying DogWifHat tokens with Solana. The metadata specified in the action like buttons, description, etc. are displayed on the modal. For this to render, you need to download Dialect’s Blink Extension from the Chrome Web Store (Link at the end of the article). But in some cases, if you don’t have the extension installed it displays as a regular link as a fallback, so you can click on it to go to the client webpage with the same modal.\u003C/p>\n\u003Ch2 id=\"uses-of-actions--blinks\">Uses of Actions &#x26; Blinks\u003C/h2>\n\u003Cp>Imagine you’re an artist who really like Farcaster frames but wish it was on Twitter as well. Now, you can create a Blink through Dialect linked to an Action that mints an NFT to the user. You post the Blink on Twitter and the client renders the mint page over the tweet similar to the Jupiter swap page. The same applies if you want to create a Donation blink for a charity, a DAO blink to get members of your DAO to vote easily on Twitter or a raffle blink to participate in sweepstakes!\u003C/p>\n\u003Cp>Most importantly, the Actions API helps streamline interacting on-chain to a simple set of HTTPS requests, which makes it easier for Web2 devs to integrate on-chain activity seamlessly into their application and not need to set up a whole token mint page or donation page on their own.\u003C/p>\n\u003Ch2 id=\"important-links\">Important Links\u003C/h2>\n\u003Cp>Learn more: \u003Ca href=\"https://solana.com/solutions/actions\" rel=\"nofollow, noopener, noreferrer\" target=\"_blank\">Solana Solutions\u003C/a>\u003C/p>\n\u003Cp>Docs: \u003Ca href=\"https://solana.com/docs/advanced/actions\" rel=\"nofollow, noopener, noreferrer\" target=\"_blank\">Solana Docs\u003C/a>\u003C/p>\n\u003Cp>GitHub Repo: \u003Ca href=\"https://github.com/solana-developers/solana-actions\" rel=\"nofollow, noopener, noreferrer\" target=\"_blank\">Solana Developers\u003C/a>\u003C/p>\n\u003Cp>Dialect Extension: \u003Ca href=\"https://chromewebstore.google.com/detail/dialect-blinks/mhklkgpihchphohoiopkidjnbhdoilof\" rel=\"nofollow, noopener, noreferrer\" target=\"_blank\">Chrome Web Store\u003C/a>\u003C/p>\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>",{"headings":30,"localImagePaths":58,"remoteImagePaths":59,"frontmatter":60,"imagePaths":64},[31,35,38,42,46,49,52,55],{"depth":32,"slug":33,"text":34},2,"introduction","Introduction",{"depth":32,"slug":36,"text":37},"actions","Actions",{"depth":39,"slug":40,"text":41},3,"how-actions-work","How Actions Work",{"depth":43,"slug":44,"text":45},4,"action-api-flow","Action API Flow",{"depth":32,"slug":47,"text":48},"blinks","Blinks",{"depth":39,"slug":50,"text":51},"linking-actions-with-blinks","Linking Actions with Blinks",{"depth":32,"slug":53,"text":54},"uses-of-actions--blinks","Uses of Actions & Blinks",{"depth":32,"slug":56,"text":57},"important-links","Important Links",[25],[],{"title":14,"description":15,"publishDate":61,"updatedDate":61,"tags":62,"draft":18,"minutesRead":63},"22 Feb 2025",[20,21],"4 min read",[25],"actions-and-blinks/index.md","blockchain-ai-agent",{"id":66,"data":68,"body":77,"filePath":78,"assetImports":79,"digest":82,"rendered":83,"legacyId":139},{"title":69,"description":70,"publishDate":71,"updatedDate":72,"draft":18,"tags":73,"ogImage":76},"🤖🔒 Ứng dụng AI Agent vào Blockchain (NFTs & Tokens)","The integration and synergy between artificial intelligence agents and Solana-based non-fungible tokens",["Date","2025-02-28T17:00:00.000Z"],["Date","2025-02-28T17:00:00.000Z"],[74,21,20,75],"web3","ai_agent","https://i2.seadn.io/ethereum/0x8a90cab2b38dba80c64b7734e58ee1db38b8992e/2e73bb28d2bc794b8a84fb538cd50e9b.png","> 🌟 Bài viết này cung cấp cái nhìn tổng quan sinh động về AI agent, công nghệ blockchain. Và sự tích hợp đột phá giữa hai nền tảng tiên tiến này.\n\n## 🌍 Giới thiệu\n\n- **📈 Sự gia tăng** của các AI agent giao dịch trên Solana đã khơi dậy những suy đoán sôi nổi về việc các AI Agent thực hiện các giao dịch tài chính.\n\n- **💰 Thị trường hiện tại** của các token AI đang tạo ra khối lượng giao dịch hơn 1 tỷ USD trong 24 giờ và đại diện cho vốn hóa thị trường vượt hơn 9,5 tỷ USD. Tuy nhiên, vượt ra ngoài các thị trường đầu cơ này, một sự chuyển dịch sâu sắc hơn đã bắt đầu diễn ra trong lĩnh vực tiền điện tử — một sự thay đổi được xây dựng dựa trên nhiều năm tự động hóa ngày càng tăng.\n\n- **🤖 Bot chiếm ưu thế**: Hiện đã chiếm phần lớn các giao dịch tiền điện tử (lên tới 90% trong một số phân khúc). Chúng chưa phải là các AI agent hoàn toàn tự chủ — nhưng chưa hẳn đã không. Dẫu vậy, chúng là những tiền thân rõ ràng, ngày càng trổng quát và độc lập hơn theo thời gian.\n\n- **⚡ Bản chất phù hợp**: Cơ sở hạ tầng tiền điện tử đặc biệt phù hợp với các giao dịch tự động và có tính chương trình hóa.\n\n![Header Image](header.png)\n\n# 🤖 Tổng quan về AI Agents và những vấn đề liên quan\n\n### 🤖 AI agent là gì?\n\nAI agent là **Smart AI Automation**, tự động thực hiện nhiệm vụ thay con người, dựa trên thuật toán AI. Tự động học hỏi, phân tích, quyết định và tương tác với môi trường, như chatbot, bot giao dịch, hay trợ lý ảo, nổi bật nhờ tính tự chủ và hiệu quả.\n\n### ⛓️ Blockchain và NFTs là gì?\n\n- **Blockchain**: Công nghệ lưu trữ phân tán, lưu trữ dữ liệu trong các khối (block) liên kết, được mã hóa (by chain), đảm bảo tính phi tập trung, minh bạch và an toàn, thường dùng cho tiền điện tử và hợp đồng thông minh.\n- **🖼️ NFTs (Non-Fungible Tokens)**: Tài sản số độc nhất trên blockchain, đại diện cho quyền sở hữu vật phẩm như nghệ thuật, âm nhạc, hay đồ trong game.  \n  _\"NFT giống như Mona Lisa - copy 99.99% vẫn chỉ là bản sao!\"_ 😄\n\n---\n\n![Ai agent Image](work-ai.png)\n\n## ⚖️ Bài toán đặt ra\n\n**Nếu con người ngủ/ngưng hoạt động → Thị trường vẫn chạy**. AI Agent giúp tự động hóa giao dịch nhưng cần giải quyết:\n\n### ✅ Điểm mạnh:\n\n1. **🛡️ Tự chủ (Autonomy)**: Hoạt động độc lập, không cần giám sát liên tục.\n2. **⚡ Hiệu quả (Efficiency)**: Kết hợp data on-chain/off-chain để ra quyết định tối ưu.\n3. **📚 Khả năng học hỏi (Adaptability)**: Cải thiện qua machine learning.\n\n### ❌ Điểm yếu:\n\n1. **📉 Phụ thuộc dữ liệu**: Hiệu quả giảm nếu data thiếu/sai.\n2. **🎨 Thiếu sáng tạo**: Giới hạn trong lập trình.\n3. **🔓 Rủi ro bảo mật**: Dễ bị tấn công nếu hệ thống không an toàn.\n\n---\n\n## 🔐 Security Challenge: Bảo vệ Ví Solana\n\n**Vấn đề**: AI Agent cần truy cập ví nhưng lưu **private key** trong code → Rủi ro bị hack!\n\n### 💥 Ví dụ thực tế:\n\n- **3M$ mất trắng** (Banana Gun 9/2024) do lỗi oracle tin nhắn Telegram.\n- Bot có quyền ví → Giao dịch không mong muốn không thể đảo ngược.\n\n---\n\n## 🛠️ Giải pháp cân bằng Security & Autonomy\n\n[Turnkey](https://www.turnkey.com/) cung cấp kiến trúc 3 lớp:\n\n### 1. 🔑 Khóa API Phân Quyền\n\n- Giới hạn phạm vi hoạt động của agent\n- Định nghĩa chính sách chi tiết (ký giao dịch, tương tác hợp đồng...)\n\n### 2. 🛡️ Môi Trường Enclave (AWS Nitro)\n\n- Cách ly hoàn toàn với bên ngoài\n- Không lưu trữ/mạng/khả năng sửa đổi\n\n### 3. ✅ Chứng Thực Công Khai\n\n- Cryptographic proof xác minh mã nguồn\n- Reproducible builds đảm bảo tính toàn vẹn\n\n---\n\n## 🚀 Tương Lai Phát Triển\n\n- **🤖 Agent tự chủ hoàn toàn**\n- **🎮 Tích hợp GameFi/NFT**\n- **🌐 Hệ sinh thái DAO phi tập trung**\n\n## Kết luận:\n\nSự kết hợp giữa AI agents và NFT collections không chỉ là xu hướng mà còn là một bước tiến quan trọng trong việc mở rộng tiềm năng của công nghệ số. Từ quản lý tự động đến sáng tạo nghệ thuật, AI đang định hình lại cách chúng ta tương tác với NFT, đồng thời tạo ra các cơ hội mới cho nghệ sĩ, nhà sưu tập và nhà đầu tư. Tuy nhiên, các tranh cãi về tính sáng tạo và bảo mật vẫn cần được giải quyết để đảm bảo sự phát triển bền vững.\n\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>","src/content/post/blockchain-ai-agent/index.md",[80,81],"header.png","work-ai.png","d3ca0f724b843f89",{"html":84,"metadata":85},"\u003Cblockquote>\n\u003Cp>🌟 Bài viết này cung cấp cái nhìn tổng quan sinh động về AI agent, công nghệ blockchain. Và sự tích hợp đột phá giữa hai nền tảng tiên tiến này.\u003C/p>\n\u003C/blockquote>\n\u003Ch2 id=\"-giới-thiệu\">🌍 Giới thiệu\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>📈 Sự gia tăng\u003C/strong> của các AI agent giao dịch trên Solana đã khơi dậy những suy đoán sôi nổi về việc các AI Agent thực hiện các giao dịch tài chính.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>💰 Thị trường hiện tại\u003C/strong> của các token AI đang tạo ra khối lượng giao dịch hơn 1 tỷ USD trong 24 giờ và đại diện cho vốn hóa thị trường vượt hơn 9,5 tỷ USD. Tuy nhiên, vượt ra ngoài các thị trường đầu cơ này, một sự chuyển dịch sâu sắc hơn đã bắt đầu diễn ra trong lĩnh vực tiền điện tử — một sự thay đổi được xây dựng dựa trên nhiều năm tự động hóa ngày càng tăng.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>🤖 Bot chiếm ưu thế\u003C/strong>: Hiện đã chiếm phần lớn các giao dịch tiền điện tử (lên tới 90% trong một số phân khúc). Chúng chưa phải là các AI agent hoàn toàn tự chủ — nhưng chưa hẳn đã không. Dẫu vậy, chúng là những tiền thân rõ ràng, ngày càng trổng quát và độc lập hơn theo thời gian.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>⚡ Bản chất phù hợp\u003C/strong>: Cơ sở hạ tầng tiền điện tử đặc biệt phù hợp với các giao dịch tự động và có tính chương trình hóa.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;header.png&#x22;,&#x22;alt&#x22;:&#x22;Header Image&#x22;,&#x22;index&#x22;:0}\">\n\u003Ch1 id=\"-tổng-quan-về-ai-agents-và-những-vấn-đề-liên-quan\">🤖 Tổng quan về AI Agents và những vấn đề liên quan\u003C/h1>\n\u003Ch3 id=\"-ai-agent-là-gì\">🤖 AI agent là gì?\u003C/h3>\n\u003Cp>AI agent là \u003Cstrong>Smart AI Automation\u003C/strong>, tự động thực hiện nhiệm vụ thay con người, dựa trên thuật toán AI. Tự động học hỏi, phân tích, quyết định và tương tác với môi trường, như chatbot, bot giao dịch, hay trợ lý ảo, nổi bật nhờ tính tự chủ và hiệu quả.\u003C/p>\n\u003Ch3 id=\"️-blockchain-và-nfts-là-gì\">⛓️ Blockchain và NFTs là gì?\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Blockchain\u003C/strong>: Công nghệ lưu trữ phân tán, lưu trữ dữ liệu trong các khối (block) liên kết, được mã hóa (by chain), đảm bảo tính phi tập trung, minh bạch và an toàn, thường dùng cho tiền điện tử và hợp đồng thông minh.\u003C/li>\n\u003Cli>\u003Cstrong>🖼️ NFTs (Non-Fungible Tokens)\u003C/strong>: Tài sản số độc nhất trên blockchain, đại diện cho quyền sở hữu vật phẩm như nghệ thuật, âm nhạc, hay đồ trong game.\u003Cbr>\n\u003Cem>”NFT giống như Mona Lisa - copy 99.99% vẫn chỉ là bản sao!”\u003C/em> 😄\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;work-ai.png&#x22;,&#x22;alt&#x22;:&#x22;Ai agent Image&#x22;,&#x22;index&#x22;:0}\">\n\u003Ch2 id=\"️-bài-toán-đặt-ra\">⚖️ Bài toán đặt ra\u003C/h2>\n\u003Cp>\u003Cstrong>Nếu con người ngủ/ngưng hoạt động → Thị trường vẫn chạy\u003C/strong>. AI Agent giúp tự động hóa giao dịch nhưng cần giải quyết:\u003C/p>\n\u003Ch3 id=\"-điểm-mạnh\">✅ Điểm mạnh:\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>🛡️ Tự chủ (Autonomy)\u003C/strong>: Hoạt động độc lập, không cần giám sát liên tục.\u003C/li>\n\u003Cli>\u003Cstrong>⚡ Hiệu quả (Efficiency)\u003C/strong>: Kết hợp data on-chain/off-chain để ra quyết định tối ưu.\u003C/li>\n\u003Cli>\u003Cstrong>📚 Khả năng học hỏi (Adaptability)\u003C/strong>: Cải thiện qua machine learning.\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"-điểm-yếu\">❌ Điểm yếu:\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>📉 Phụ thuộc dữ liệu\u003C/strong>: Hiệu quả giảm nếu data thiếu/sai.\u003C/li>\n\u003Cli>\u003Cstrong>🎨 Thiếu sáng tạo\u003C/strong>: Giới hạn trong lập trình.\u003C/li>\n\u003Cli>\u003Cstrong>🔓 Rủi ro bảo mật\u003C/strong>: Dễ bị tấn công nếu hệ thống không an toàn.\u003C/li>\n\u003C/ol>\n\u003Chr>\n\u003Ch2 id=\"-security-challenge-bảo-vệ-ví-solana\">🔐 Security Challenge: Bảo vệ Ví Solana\u003C/h2>\n\u003Cp>\u003Cstrong>Vấn đề\u003C/strong>: AI Agent cần truy cập ví nhưng lưu \u003Cstrong>private key\u003C/strong> trong code → Rủi ro bị hack!\u003C/p>\n\u003Ch3 id=\"-ví-dụ-thực-tế\">💥 Ví dụ thực tế:\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>3M$ mất trắng\u003C/strong> (Banana Gun 9/2024) do lỗi oracle tin nhắn Telegram.\u003C/li>\n\u003Cli>Bot có quyền ví → Giao dịch không mong muốn không thể đảo ngược.\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"️-giải-pháp-cân-bằng-security--autonomy\">🛠️ Giải pháp cân bằng Security &#x26; Autonomy\u003C/h2>\n\u003Cp>\u003Ca href=\"https://www.turnkey.com/\" rel=\"nofollow, noopener, noreferrer\" target=\"_blank\">Turnkey\u003C/a> cung cấp kiến trúc 3 lớp:\u003C/p>\n\u003Ch3 id=\"1--khóa-api-phân-quyền\">1. 🔑 Khóa API Phân Quyền\u003C/h3>\n\u003Cul>\n\u003Cli>Giới hạn phạm vi hoạt động của agent\u003C/li>\n\u003Cli>Định nghĩa chính sách chi tiết (ký giao dịch, tương tác hợp đồng…)\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-️-môi-trường-enclave-aws-nitro\">2. 🛡️ Môi Trường Enclave (AWS Nitro)\u003C/h3>\n\u003Cul>\n\u003Cli>Cách ly hoàn toàn với bên ngoài\u003C/li>\n\u003Cli>Không lưu trữ/mạng/khả năng sửa đổi\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3--chứng-thực-công-khai\">3. ✅ Chứng Thực Công Khai\u003C/h3>\n\u003Cul>\n\u003Cli>Cryptographic proof xác minh mã nguồn\u003C/li>\n\u003Cli>Reproducible builds đảm bảo tính toàn vẹn\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"-tương-lai-phát-triển\">🚀 Tương Lai Phát Triển\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>🤖 Agent tự chủ hoàn toàn\u003C/strong>\u003C/li>\n\u003Cli>\u003Cstrong>🎮 Tích hợp GameFi/NFT\u003C/strong>\u003C/li>\n\u003Cli>\u003Cstrong>🌐 Hệ sinh thái DAO phi tập trung\u003C/strong>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"kết-luận\">Kết luận:\u003C/h2>\n\u003Cp>Sự kết hợp giữa AI agents và NFT collections không chỉ là xu hướng mà còn là một bước tiến quan trọng trong việc mở rộng tiềm năng của công nghệ số. Từ quản lý tự động đến sáng tạo nghệ thuật, AI đang định hình lại cách chúng ta tương tác với NFT, đồng thời tạo ra các cơ hội mới cho nghệ sĩ, nhà sưu tập và nhà đầu tư. Tuy nhiên, các tranh cãi về tính sáng tạo và bảo mật vẫn cần được giải quyết để đảm bảo sự phát triển bền vững.\u003C/p>\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>",{"headings":86,"localImagePaths":133,"remoteImagePaths":134,"frontmatter":135,"imagePaths":138},[87,90,94,97,100,103,106,109,112,115,118,121,124,127,130],{"depth":32,"slug":88,"text":89},"-giới-thiệu","🌍 Giới thiệu",{"depth":91,"slug":92,"text":93},1,"-tổng-quan-về-ai-agents-và-những-vấn-đề-liên-quan","🤖 Tổng quan về AI Agents và những vấn đề liên quan",{"depth":39,"slug":95,"text":96},"-ai-agent-là-gì","🤖 AI agent là gì?",{"depth":39,"slug":98,"text":99},"️-blockchain-và-nfts-là-gì","⛓️ Blockchain và NFTs là gì?",{"depth":32,"slug":101,"text":102},"️-bài-toán-đặt-ra","⚖️ Bài toán đặt ra",{"depth":39,"slug":104,"text":105},"-điểm-mạnh","✅ Điểm mạnh:",{"depth":39,"slug":107,"text":108},"-điểm-yếu","❌ Điểm yếu:",{"depth":32,"slug":110,"text":111},"-security-challenge-bảo-vệ-ví-solana","🔐 Security Challenge: Bảo vệ Ví Solana",{"depth":39,"slug":113,"text":114},"-ví-dụ-thực-tế","💥 Ví dụ thực tế:",{"depth":32,"slug":116,"text":117},"️-giải-pháp-cân-bằng-security--autonomy","🛠️ Giải pháp cân bằng Security & Autonomy",{"depth":39,"slug":119,"text":120},"1--khóa-api-phân-quyền","1. 🔑 Khóa API Phân Quyền",{"depth":39,"slug":122,"text":123},"2-️-môi-trường-enclave-aws-nitro","2. 🛡️ Môi Trường Enclave (AWS Nitro)",{"depth":39,"slug":125,"text":126},"3--chứng-thực-công-khai","3. ✅ Chứng Thực Công Khai",{"depth":32,"slug":128,"text":129},"-tương-lai-phát-triển","🚀 Tương Lai Phát Triển",{"depth":32,"slug":131,"text":132},"kết-luận","Kết luận:",[80,81],[],{"title":69,"ogImage":76,"description":70,"publishDate":136,"updatedDate":136,"tags":137,"draft":18,"minutesRead":63},"01 Mar 2025",[74,21,20,75],[80,81],"blockchain-ai-agent/index.md","network-of-experts",{"id":140,"data":142,"body":148,"filePath":149,"assetImports":150,"digest":155,"rendered":156,"legacyId":232},{"title":143,"description":144,"publishDate":145,"updatedDate":146,"draft":18,"tags":147,"ogImage":76},"Solana MEV Report","Solana MEV Report: Trends, Insights, and Challenges",["Date","2025-02-21T17:00:00.000Z"],["Date","2025-02-21T17:00:00.000Z"],[74,21,20],"> This article describes a MEV attack in more detail for engineer.\n\n## Introduction\n\n![Header Image](header.png)\n\n# Summary of MEV on Solana and related issues:\n\n### MEV Characteristics on Solana:\n\nDifferent from other blockchains due to unique architecture and lack of global mempool\nRequires independent mempool development and network-wide adoption\n\n### Current Situation:\n\nJito suspended public mempool in March 2024, reducing harmful MEV\nAlternative mempools emerged with less transparency\nDeezNode operates a private mempool and is the main source of sandwich attacks\nDeezNode's bot executed 1.55 million sandwich transactions in 30 days, profiting 65,880 SOL\n\n### Affected Groups:\n\nMemecoin traders vulnerable to sandwich attacks due to high slippage tolerance\nMarinade Finance's SAM criticized for enabling validator sandwiching\n\n### Key Statistics:\n\nOver 3 billion Jito bundles processed in the past year\n90.4 million successful arbitrage transactions\nAverage profit per arbitrage: $1.58\nTotal profits: $142.8 million (88.7% in SOL)\n\n### Proposed Solutions:\n\nValidator whitelists (considered last resort)\nSandwich-resistant AMMs (sr-AMMs)\nMultiple Concurrent Leaders (MCL) - long-term solution under development\n\n## Introduction\n\n![Sandwich Attack](sandwich.png)\n\nHere's a concise summary of MEV:\n\n1. Basic MEV Definition:\n\n- MEV (Maximal Extractable Value) involves extracting value by manipulating transaction order\n- Transactions can be added, removed, or reordered within blocks\n- Searchers monitor chains to strategically place trades for value extraction\n\n2. MEV on Solana:\n\n- Functions differently due to unique architecture and no global mempool\n- Uses features like Turbine and Stake-Weighted QoS\n- Fast block production limits traditional MEV approaches\n- Searchers need own nodes or validator partnerships\n\n3. Understanding MEV:\n\n- Term has varied interpretations\n- Not all MEV is harmful\n- Complete elimination is considered unlikely\n- Networks claiming MEV elimination often lack activity or use questionable solutions\n\n4. Sandwiching:\n\n- Most prominent and harmful form of MEV\n- Involves placing transactions before and after target transaction\n- Profitable for searchers but increases costs for regular users\n- Negatively impacts execution prices\n\n## MEV Process\n\n### This report analyzes Solana’s current MEV (Maximal Extractable Value) landscape and is divided into four sections:\n\n1. **Forms of MEV**: Explores the various types of MEV observed on Solana today, supported by detailed examples.\n2. **MEV Mitigation Mechanism**s: Examines strategies and mechanisms aimed at reducing or eliminating harmful forms of MEV.\n\n### **_Forms of MEV_**\n\n### Liquidations\n\nWhen borrowers on lending protocols don’t maintain the required collateralization ratio, their loans can be liquidated. Searchers track these undercollateralized positions on the blockchain, repaying the debt to claim part of the collateral as a reward. This liquidation process, seen as good MEV, is vital for protocol solvency and supports the stability of the on-chain DeFi ecosystem.\n\n### Example:\n\nOn December 10, a liquidation took place on Kamino, Solana’s top lending protocol.\n\n- A searcher paid 10.642 USDC to settle a user’s debt, receiving 0.05479 SOL in collateral.\n- After paying a 0.0013 SOL protocol fee and a 0.001317 SOL priority fee,\n- The searcher earned a net profit of 0.0492 USD.\n\n![Liquidations](liquidity.jpg)\n\n### Front-running\n\n- **Front-running Defined**: An MEV searcher spots a trader’s order in the mempool and places a matching order first, profiting from the price shift.\n- **Mechanism**: They act on an unconfirmed transaction’s price impact before it’s processed.\n- **Simplicity**: Unlike sandwich attacks, it’s a straightforward strategy.\n- **Process**: The searcher buys before a target’s price-boosting order, bundling their transaction to go first.\n- **Profit**: They gain as the target’s trade raises the price.\n- **Target’s Loss**: The trader pays more due to the searcher’s earlier buy.\n\n### Back-runing\n\nBack-running, an MEV strategy opposite to front-running, exploits temporary price imbalances from a user’s transaction, often due to poor routing. After the transaction, searchers trade the same asset to balance prices across pools, earning a profit that the user could have gained with better execution.\n\n#### Example\n\n- **Event Overview**: On January 10, 2024, a user bought $8.9 million worth of DogWifHat (WIF) in one transaction.\n- **Market Context**: WIF traded at $0.2 with only a few million dollars in liquidity across all on-chain venues.\n- **Transaction Execution**: The Jupiter aggregator split the trade across three pools with limited liquidity, causing a price spike to $3.\n- **Back-run Execution**: A searcher used a Jito Bundle, paying a 890.42 SOL ($91,621) tip for priority.\n- **Step 1 - Purchase**: The searcher swapped 703.31 SOL ($72,368) for 490,143.90 WIF via a Raydium concentrated liquidity pool.\n- **Step 2 - Sale**: They then traded the WIF tokens for 19,035.97 SOL ($1,958,733) through a Raydium V4 pool.\n- **Profit Outcome**: The back-run netted a profit of 17,442.24 SOL ($1,794,746) in one transaction.\n- **Note**: All dollar values reflect prices at the time of the transaction.\n  ![back-runing](back.jpg)\n\n### Sandwich Attacks\n\n- **Sandwich Attacks Defined**: The most infamous toxic MEV, targeting traders on AMMs or bonding curves with high slippage tolerances.\n- **Trader Vulnerability**: Memecoin traders, chasing high returns, set high slippage for fast execution on illiquid, volatile assets, making them prime targets.\n- **Impact on Traders**: Sandwiching forces traders to fill orders at the worst possible price, creating a negative outcome.\n- **Attack Process**:\n  - Step 1 - Front-run: The attacker buys the asset unprofitably, pushing the price to the victim’s slippage limit.\n  - Step 2 - Victim’s Trade: The victim’s order executes at this high price, further inflating it.\n  - Step 3 - Back-run: The attacker sells profitably at the elevated price, offsetting losses and earning a net profit.\n- **Execution**: All three transactions are bundled atomically for success.\n\n#### Example Sandwich Attack Transaction\n\n**Event Overview**: A Sandwich attack occurred on December 16, 2024, via a known program (vpeNALD… Noax38b), executed as an atomic Jito bundle with a 0.000148 SOL ($0.03) tip. - **Front-run Transaction**: Searcher spent 14.63 SOL to buy 32.9 million Komeko tokens, a new meme coin on Pump Fun. - **Victim Transaction**: Victim swapped 0.33 SOL for 624,000 Komeko tokens. - **Back-run Transaction**: Searcher sold 32.9 million Komeko tokens for 14.65 SOL.\n![sandwich](sandwich.jpg)\n\n### **_MEV Mitigation Mechanism_**\n\nSubstantial resources are dedicated to studying and integrating general-purpose, out-of-protocol mechanisms into applications and infrastructure to mitigate or reallocate MEV and reduce its on-chain surface area.\n\n### Validator Whitelists\n\n- **Proposed Idea**: Stakers, RPC providers, and validators could ostracize sandwiching validators by skipping their leadership slots.\n- **Downsides**: Whitelists, a last-resort option, could delay transactions by seconds, harming user experience.\n- **Risks**: This risks a semi-permissioned, censored system, clashing with blockchain’s decentralized principles, and might exclude honest validators, eroding trust.\n- **Alternative**: Independent developers and apps can create their own validator allow/deny lists using the Helius Node.js SDK’s sendTransaction method.\n\n### Dynamic Slippage + MEV Protection\n\n- **Slippage Management Challenges**: Traditionally, users manually adjust slippage, a tedious task, especially for volatile or illiquid tokens like memecoins, where settings differ from stable assets.\n- **Jupiter’s Solution**: In August 2024, Jupiter Aggregator on Solana introduced dynamic slippage, an algorithm that adjusts slippage in real-time using heuristics based on:\n  - Market conditions\n  - Token types (stable vs. volatile)\n  - Trading pools or order books\n  - User’s slippage tolerance\n  - Goal: Optimize trades with minimal slippage, reducing MEV opportunities.\n- **MEV Protect Mode**: A feature in DEXs and Telegram bots routes trades to Jito block engines to prevent sandwich attacks, though it increases fees.\n  - **User Behavior**: Many Telegram bot users skip MEV protection, favoring speed over safety.\n\n## Conclusion\n\n- **Solana MEV Evolution**: Solana’s MEV landscape is rapidly changing, not yet at a stable equilibrium.\n  - **Searcher Trends**: Searchers are advancing strategies to extract value.\n  - **Ecosystem Response**: A multipronged approach uses infrastructure and mechanisms to curb harmful MEV.\n- **Investor Outlook**: Firms like Multicoin Capital are investing, expecting ecosystem teams to capture more MEV value, with a shifting distribution in the future.\n\n## Further Resources\n\n- MEV an Introduction - Helius blog\n- Arbitrage as a Convex optimization problem - Umberto Natale, Chorus One\n- Ethereum & Solana: MEV & Beyond - Uncommon Core\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>","src/content/post/network-of-experts/index.md",[80,151,152,153,154],"sandwich.png","liquidity.jpg","back.jpg","sandwich.jpg","08fa2e8f9238e5c7",{"html":157,"metadata":158},"\u003Cblockquote>\n\u003Cp>This article describes a MEV attack in more detail for engineer.\u003C/p>\n\u003C/blockquote>\n\u003Ch2 id=\"introduction\">Introduction\u003C/h2>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;header.png&#x22;,&#x22;alt&#x22;:&#x22;Header Image&#x22;,&#x22;index&#x22;:0}\">\n\u003Ch1 id=\"summary-of-mev-on-solana-and-related-issues\">Summary of MEV on Solana and related issues:\u003C/h1>\n\u003Ch3 id=\"mev-characteristics-on-solana\">MEV Characteristics on Solana:\u003C/h3>\n\u003Cp>Different from other blockchains due to unique architecture and lack of global mempool\nRequires independent mempool development and network-wide adoption\u003C/p>\n\u003Ch3 id=\"current-situation\">Current Situation:\u003C/h3>\n\u003Cp>Jito suspended public mempool in March 2024, reducing harmful MEV\nAlternative mempools emerged with less transparency\nDeezNode operates a private mempool and is the main source of sandwich attacks\nDeezNode’s bot executed 1.55 million sandwich transactions in 30 days, profiting 65,880 SOL\u003C/p>\n\u003Ch3 id=\"affected-groups\">Affected Groups:\u003C/h3>\n\u003Cp>Memecoin traders vulnerable to sandwich attacks due to high slippage tolerance\nMarinade Finance’s SAM criticized for enabling validator sandwiching\u003C/p>\n\u003Ch3 id=\"key-statistics\">Key Statistics:\u003C/h3>\n\u003Cp>Over 3 billion Jito bundles processed in the past year\n90.4 million successful arbitrage transactions\nAverage profit per arbitrage: $1.58\nTotal profits: $142.8 million (88.7% in SOL)\u003C/p>\n\u003Ch3 id=\"proposed-solutions\">Proposed Solutions:\u003C/h3>\n\u003Cp>Validator whitelists (considered last resort)\nSandwich-resistant AMMs (sr-AMMs)\nMultiple Concurrent Leaders (MCL) - long-term solution under development\u003C/p>\n\u003Ch2 id=\"introduction-1\">Introduction\u003C/h2>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;sandwich.png&#x22;,&#x22;alt&#x22;:&#x22;Sandwich Attack&#x22;,&#x22;index&#x22;:0}\">\n\u003Cp>Here’s a concise summary of MEV:\u003C/p>\n\u003Col>\n\u003Cli>Basic MEV Definition:\u003C/li>\n\u003C/ol>\n\u003Cul>\n\u003Cli>MEV (Maximal Extractable Value) involves extracting value by manipulating transaction order\u003C/li>\n\u003Cli>Transactions can be added, removed, or reordered within blocks\u003C/li>\n\u003Cli>Searchers monitor chains to strategically place trades for value extraction\u003C/li>\n\u003C/ul>\n\u003Col start=\"2\">\n\u003Cli>MEV on Solana:\u003C/li>\n\u003C/ol>\n\u003Cul>\n\u003Cli>Functions differently due to unique architecture and no global mempool\u003C/li>\n\u003Cli>Uses features like Turbine and Stake-Weighted QoS\u003C/li>\n\u003Cli>Fast block production limits traditional MEV approaches\u003C/li>\n\u003Cli>Searchers need own nodes or validator partnerships\u003C/li>\n\u003C/ul>\n\u003Col start=\"3\">\n\u003Cli>Understanding MEV:\u003C/li>\n\u003C/ol>\n\u003Cul>\n\u003Cli>Term has varied interpretations\u003C/li>\n\u003Cli>Not all MEV is harmful\u003C/li>\n\u003Cli>Complete elimination is considered unlikely\u003C/li>\n\u003Cli>Networks claiming MEV elimination often lack activity or use questionable solutions\u003C/li>\n\u003C/ul>\n\u003Col start=\"4\">\n\u003Cli>Sandwiching:\u003C/li>\n\u003C/ol>\n\u003Cul>\n\u003Cli>Most prominent and harmful form of MEV\u003C/li>\n\u003Cli>Involves placing transactions before and after target transaction\u003C/li>\n\u003Cli>Profitable for searchers but increases costs for regular users\u003C/li>\n\u003Cli>Negatively impacts execution prices\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"mev-process\">MEV Process\u003C/h2>\n\u003Ch3 id=\"this-report-analyzes-solanas-current-mev-maximal-extractable-value-landscape-and-is-divided-into-four-sections\">This report analyzes Solana’s current MEV (Maximal Extractable Value) landscape and is divided into four sections:\u003C/h3>\n\u003Col>\n\u003Cli>\u003Cstrong>Forms of MEV\u003C/strong>: Explores the various types of MEV observed on Solana today, supported by detailed examples.\u003C/li>\n\u003Cli>\u003Cstrong>MEV Mitigation Mechanism\u003C/strong>s: Examines strategies and mechanisms aimed at reducing or eliminating harmful forms of MEV.\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"forms-of-mev\">\u003Cstrong>\u003Cem>Forms of MEV\u003C/em>\u003C/strong>\u003C/h3>\n\u003Ch3 id=\"liquidations\">Liquidations\u003C/h3>\n\u003Cp>When borrowers on lending protocols don’t maintain the required collateralization ratio, their loans can be liquidated. Searchers track these undercollateralized positions on the blockchain, repaying the debt to claim part of the collateral as a reward. This liquidation process, seen as good MEV, is vital for protocol solvency and supports the stability of the on-chain DeFi ecosystem.\u003C/p>\n\u003Ch3 id=\"example\">Example:\u003C/h3>\n\u003Cp>On December 10, a liquidation took place on Kamino, Solana’s top lending protocol.\u003C/p>\n\u003Cul>\n\u003Cli>A searcher paid 10.642 USDC to settle a user’s debt, receiving 0.05479 SOL in collateral.\u003C/li>\n\u003Cli>After paying a 0.0013 SOL protocol fee and a 0.001317 SOL priority fee,\u003C/li>\n\u003Cli>The searcher earned a net profit of 0.0492 USD.\u003C/li>\n\u003C/ul>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;liquidity.jpg&#x22;,&#x22;alt&#x22;:&#x22;Liquidations&#x22;,&#x22;index&#x22;:0}\">\n\u003Ch3 id=\"front-running\">Front-running\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Front-running Defined\u003C/strong>: An MEV searcher spots a trader’s order in the mempool and places a matching order first, profiting from the price shift.\u003C/li>\n\u003Cli>\u003Cstrong>Mechanism\u003C/strong>: They act on an unconfirmed transaction’s price impact before it’s processed.\u003C/li>\n\u003Cli>\u003Cstrong>Simplicity\u003C/strong>: Unlike sandwich attacks, it’s a straightforward strategy.\u003C/li>\n\u003Cli>\u003Cstrong>Process\u003C/strong>: The searcher buys before a target’s price-boosting order, bundling their transaction to go first.\u003C/li>\n\u003Cli>\u003Cstrong>Profit\u003C/strong>: They gain as the target’s trade raises the price.\u003C/li>\n\u003Cli>\u003Cstrong>Target’s Loss\u003C/strong>: The trader pays more due to the searcher’s earlier buy.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"back-runing\">Back-runing\u003C/h3>\n\u003Cp>Back-running, an MEV strategy opposite to front-running, exploits temporary price imbalances from a user’s transaction, often due to poor routing. After the transaction, searchers trade the same asset to balance prices across pools, earning a profit that the user could have gained with better execution.\u003C/p>\n\u003Ch4 id=\"example-1\">Example\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Event Overview\u003C/strong>: On January 10, 2024, a user bought $8.9 million worth of DogWifHat (WIF) in one transaction.\u003C/li>\n\u003Cli>\u003Cstrong>Market Context\u003C/strong>: WIF traded at $0.2 with only a few million dollars in liquidity across all on-chain venues.\u003C/li>\n\u003Cli>\u003Cstrong>Transaction Execution\u003C/strong>: The Jupiter aggregator split the trade across three pools with limited liquidity, causing a price spike to $3.\u003C/li>\n\u003Cli>\u003Cstrong>Back-run Execution\u003C/strong>: A searcher used a Jito Bundle, paying a 890.42 SOL ($91,621) tip for priority.\u003C/li>\n\u003Cli>\u003Cstrong>Step 1 - Purchase\u003C/strong>: The searcher swapped 703.31 SOL ($72,368) for 490,143.90 WIF via a Raydium concentrated liquidity pool.\u003C/li>\n\u003Cli>\u003Cstrong>Step 2 - Sale\u003C/strong>: They then traded the WIF tokens for 19,035.97 SOL ($1,958,733) through a Raydium V4 pool.\u003C/li>\n\u003Cli>\u003Cstrong>Profit Outcome\u003C/strong>: The back-run netted a profit of 17,442.24 SOL ($1,794,746) in one transaction.\u003C/li>\n\u003Cli>\u003Cstrong>Note\u003C/strong>: All dollar values reflect prices at the time of the transaction.\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;back.jpg&#x22;,&#x22;alt&#x22;:&#x22;back-runing&#x22;,&#x22;index&#x22;:0}\">\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"sandwich-attacks\">Sandwich Attacks\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Sandwich Attacks Defined\u003C/strong>: The most infamous toxic MEV, targeting traders on AMMs or bonding curves with high slippage tolerances.\u003C/li>\n\u003Cli>\u003Cstrong>Trader Vulnerability\u003C/strong>: Memecoin traders, chasing high returns, set high slippage for fast execution on illiquid, volatile assets, making them prime targets.\u003C/li>\n\u003Cli>\u003Cstrong>Impact on Traders\u003C/strong>: Sandwiching forces traders to fill orders at the worst possible price, creating a negative outcome.\u003C/li>\n\u003Cli>\u003Cstrong>Attack Process\u003C/strong>:\n\u003Cul>\n\u003Cli>Step 1 - Front-run: The attacker buys the asset unprofitably, pushing the price to the victim’s slippage limit.\u003C/li>\n\u003Cli>Step 2 - Victim’s Trade: The victim’s order executes at this high price, further inflating it.\u003C/li>\n\u003Cli>Step 3 - Back-run: The attacker sells profitably at the elevated price, offsetting losses and earning a net profit.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Execution\u003C/strong>: All three transactions are bundled atomically for success.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"example-sandwich-attack-transaction\">Example Sandwich Attack Transaction\u003C/h4>\n\u003Cp>\u003Cstrong>Event Overview\u003C/strong>: A Sandwich attack occurred on December 16, 2024, via a known program (vpeNALD… Noax38b), executed as an atomic Jito bundle with a 0.000148 SOL ($0.03) tip. - \u003Cstrong>Front-run Transaction\u003C/strong>: Searcher spent 14.63 SOL to buy 32.9 million Komeko tokens, a new meme coin on Pump Fun. - \u003Cstrong>Victim Transaction\u003C/strong>: Victim swapped 0.33 SOL for 624,000 Komeko tokens. - \u003Cstrong>Back-run Transaction\u003C/strong>: Searcher sold 32.9 million Komeko tokens for 14.65 SOL.\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;sandwich.jpg&#x22;,&#x22;alt&#x22;:&#x22;sandwich&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch3 id=\"mev-mitigation-mechanism\">\u003Cstrong>\u003Cem>MEV Mitigation Mechanism\u003C/em>\u003C/strong>\u003C/h3>\n\u003Cp>Substantial resources are dedicated to studying and integrating general-purpose, out-of-protocol mechanisms into applications and infrastructure to mitigate or reallocate MEV and reduce its on-chain surface area.\u003C/p>\n\u003Ch3 id=\"validator-whitelists\">Validator Whitelists\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Proposed Idea\u003C/strong>: Stakers, RPC providers, and validators could ostracize sandwiching validators by skipping their leadership slots.\u003C/li>\n\u003Cli>\u003Cstrong>Downsides\u003C/strong>: Whitelists, a last-resort option, could delay transactions by seconds, harming user experience.\u003C/li>\n\u003Cli>\u003Cstrong>Risks\u003C/strong>: This risks a semi-permissioned, censored system, clashing with blockchain’s decentralized principles, and might exclude honest validators, eroding trust.\u003C/li>\n\u003Cli>\u003Cstrong>Alternative\u003C/strong>: Independent developers and apps can create their own validator allow/deny lists using the Helius Node.js SDK’s sendTransaction method.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"dynamic-slippage--mev-protection\">Dynamic Slippage + MEV Protection\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Slippage Management Challenges\u003C/strong>: Traditionally, users manually adjust slippage, a tedious task, especially for volatile or illiquid tokens like memecoins, where settings differ from stable assets.\u003C/li>\n\u003Cli>\u003Cstrong>Jupiter’s Solution\u003C/strong>: In August 2024, Jupiter Aggregator on Solana introduced dynamic slippage, an algorithm that adjusts slippage in real-time using heuristics based on:\n\u003Cul>\n\u003Cli>Market conditions\u003C/li>\n\u003Cli>Token types (stable vs. volatile)\u003C/li>\n\u003Cli>Trading pools or order books\u003C/li>\n\u003Cli>User’s slippage tolerance\u003C/li>\n\u003Cli>Goal: Optimize trades with minimal slippage, reducing MEV opportunities.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>MEV Protect Mode\u003C/strong>: A feature in DEXs and Telegram bots routes trades to Jito block engines to prevent sandwich attacks, though it increases fees.\n\u003Cul>\n\u003Cli>\u003Cstrong>User Behavior\u003C/strong>: Many Telegram bot users skip MEV protection, favoring speed over safety.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Solana MEV Evolution\u003C/strong>: Solana’s MEV landscape is rapidly changing, not yet at a stable equilibrium.\n\u003Cul>\n\u003Cli>\u003Cstrong>Searcher Trends\u003C/strong>: Searchers are advancing strategies to extract value.\u003C/li>\n\u003Cli>\u003Cstrong>Ecosystem Response\u003C/strong>: A multipronged approach uses infrastructure and mechanisms to curb harmful MEV.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Investor Outlook\u003C/strong>: Firms like Multicoin Capital are investing, expecting ecosystem teams to capture more MEV value, with a shifting distribution in the future.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"further-resources\">Further Resources\u003C/h2>\n\u003Cul>\n\u003Cli>MEV an Introduction - Helius blog\u003C/li>\n\u003Cli>Arbitrage as a Convex optimization problem - Umberto Natale, Chorus One\u003C/li>\n\u003Cli>Ethereum &#x26; Solana: MEV &#x26; Beyond - Uncommon Core\u003C/li>\n\u003C/ul>\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>",{"headings":159,"localImagePaths":226,"remoteImagePaths":227,"frontmatter":228,"imagePaths":231},[160,161,164,167,170,173,176,179,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223],{"depth":32,"slug":33,"text":34},{"depth":91,"slug":162,"text":163},"summary-of-mev-on-solana-and-related-issues","Summary of MEV on Solana and related issues:",{"depth":39,"slug":165,"text":166},"mev-characteristics-on-solana","MEV Characteristics on Solana:",{"depth":39,"slug":168,"text":169},"current-situation","Current Situation:",{"depth":39,"slug":171,"text":172},"affected-groups","Affected Groups:",{"depth":39,"slug":174,"text":175},"key-statistics","Key Statistics:",{"depth":39,"slug":177,"text":178},"proposed-solutions","Proposed Solutions:",{"depth":32,"slug":180,"text":34},"introduction-1",{"depth":32,"slug":182,"text":183},"mev-process","MEV Process",{"depth":39,"slug":185,"text":186},"this-report-analyzes-solanas-current-mev-maximal-extractable-value-landscape-and-is-divided-into-four-sections","This report analyzes Solana’s current MEV (Maximal Extractable Value) landscape and is divided into four sections:",{"depth":39,"slug":188,"text":189},"forms-of-mev","Forms of MEV",{"depth":39,"slug":191,"text":192},"liquidations","Liquidations",{"depth":39,"slug":194,"text":195},"example","Example:",{"depth":39,"slug":197,"text":198},"front-running","Front-running",{"depth":39,"slug":200,"text":201},"back-runing","Back-runing",{"depth":43,"slug":203,"text":204},"example-1","Example",{"depth":39,"slug":206,"text":207},"sandwich-attacks","Sandwich Attacks",{"depth":43,"slug":209,"text":210},"example-sandwich-attack-transaction","Example Sandwich Attack Transaction",{"depth":39,"slug":212,"text":213},"mev-mitigation-mechanism","MEV Mitigation Mechanism",{"depth":39,"slug":215,"text":216},"validator-whitelists","Validator Whitelists",{"depth":39,"slug":218,"text":219},"dynamic-slippage--mev-protection","Dynamic Slippage + MEV Protection",{"depth":32,"slug":221,"text":222},"conclusion","Conclusion",{"depth":32,"slug":224,"text":225},"further-resources","Further Resources",[80,151,152,153,154],[],{"title":143,"ogImage":76,"description":144,"publishDate":61,"updatedDate":61,"tags":229,"draft":18,"minutesRead":230},[74,21,20],"6 min read",[80,151,152,153,154],"network-of-experts/index.md","summary-of-hacked-times",{"id":233,"data":235,"body":242,"filePath":243,"assetImports":244,"digest":247,"rendered":248,"legacyId":280},{"title":236,"description":237,"publishDate":238,"updatedDate":239,"draft":18,"tags":240,"ogImage":76},"🔐 Tổng hợp những lần mình bị hack ví","Đây là một số trải nghiệm cá nhân tồi của mình trong quá trình làm việc  với blockchain",["Date","2025-03-06T17:00:00.000Z"],["Date","2025-03-06T17:00:00.000Z"],[241,21,74],"hack","# 🔐 3 Lần Tôi Bị Hack Ví Như Thế Nào?\n\nĐây là một blog không viết về tech, nhưng cũng là trải nghiệm cá nhân mình trong quá trình làm việc cũng như đầu tư trong mảng blockchain. Đây là một số bài học cá nhân mình nhận ra và mọi bài học đều phải trả bằng tiền 😢. Giờ thì đi sâu vào những câu chuyện thôi. Let's go.\n\n![Header Image](header.jpg)\n\n## 💥 Lần Thứ Nhất: (06-2022) (Token bị hack là MATIC và ETH)\n\n- 🔍 Để mà nói thì đây là khoảng thời gian đầu mình bước vào lĩnh vực blockchain nói chung và thị trường crypto nói riêng, thời gian này kiến thức về blockchain và crypto của mình khá sơ khai. Căn bản lúc đó mình làm việc chỉ là bề nổi li ti trên thị trường, biết một chút về cách chuyển token từ sàn CEX (1) qua DEX (2) và ngược lại. Đây cũng là kiến thức vô cùng căn bản và quan trọng. Khi đấy hình dung của mình về thị trường và tính bảo mật của thị trường còn khá ngây ngô và đơn giản.\n- 📝 Thời điểm này cách lưu trữ ví \u003Cmnemonic (3): 12 ký tự> của mình chủ yếu là viết trong 1 file Word 😅 Giờ mà nghĩ lại thật là buồn cười. Mình cũng có nghe qua một số lời khuyên nên take note ra giấy nhưng khi đó mình làm việc trên onchain(4) thường không nhiều nên mình cũng không chú ý lắm.\n- 🖥️ Và một ngày đẹp trời đến, nói thêm nữa là khi đó mình xài máy tính Windows (unsafe on blockchain). Mình đã install 1 phần mềm edit video (Camtasia Studio) nhờ đươc 1 thằng bạn thân tên Nhân lùa, tý tag nó luôn 😅. Dĩ nhiên đó là bản crack 😅 bởi nghèo mà. Và sau đó thật thú vị khi máy tính mình lag như chưa từng được lag 😂. Mình nhớ là thời điểm này ví vẫn chưa bị hack, có thể 1 vài nguyên nhân nào đó về tech từ hacker.\n- 🔄 Sau đó, quyết định đầy \"thông minh\" của mình là cài đặt lại Win và mình đã upload file Word chứa mnemonic lên Google Drive. Khi đó trong ví mình có khoảng 3 Matic (hiện tại Matic đổi thành POL), ~ giá trị tầm 3$. Vì giá trị không lớn nên mình cũng không để ý (lúc này là hacker đã lấy được 12 ký tự mnemonic thông qua việc upload file Word lên Google Drive và rút 3 Matic, nhưng mình không biết).\n- 💸 Vào khoảng 1 tuần sau ( cuối tháng 07/2022) mình có chuyển 1 lượng ETH vào ví này để lưu trữ và \"đùng\" sau khi vừa thấy ETH hiện trong ví Metamask, thì khoảng 1s sau lượng token đó biến mất.\n- 😱 Khi đấy mình còn nghĩ do network lag và mình đợi 1'-2' vẫn không thấy đâu. Thì khi check trên Ethereum explorer (5), mình thấy token đó đã chuyển qua 1 ví khác. Ố dề luôn, thẫn thờ 1 tý thì mình check lại toàn bộ các transaction trên toàn bộ các chain của EVM (6), và mình phát hiện ra ví của mình đã bị hack trên chain Polygon(7) hơn 1 tuần rồi, mợt mõi mà. Thế là đóng máy rồi một nụ cười tươi, cài Win lần nữa và không quên bye bye cái ví vừa bị hack 😅\n\n* NOTE: *** các ví mà đã bị auto rút tiền mà mình k can thiệp nghĩa là mình đã mất ví. không còn cách nào lấy lại đươc nhé ***\n\n⚠️ **Bài học trong vụ hack này là đừng bao giờ cài phần mềm crack và lưu trữ ví trên file Word. Đặc biệt là hạn chế dùng Windows laptop nếu bạn đang join vào thị trường crypto.**\n\n## 🔥 Lần Thứ 2: (09/2023) (Token bị hack là STG + USDC)\n\n- 📄 Sau vụ hack lần 1, mình đã rút ra bài học đầy sâu sắc là viết 12 ký tự (mnemonic) vào giấy liền 😅 Mình cảm thấy nó thật sự an toàn. Chỉ có điều mỗi lần muốn import vào wallets(8) thì hơi mất thời gian xíu, bên cạnh đó, mình cũng đã không sử dụng máy Windows khi làm việc với blockchain.\n- 📚 Thời điểm này kiến thức về blockchain và crypto của mình đã được củng cố đi rất nhiều. Nên mình cũng khá tự tin về việc thao tác với các Dapps(9), hoặc chuyển tiền trên các crosschain(10) hiện tại. Nói chung khi đó là bố của tự tin luôn, ai cần là chỉ rẹc rẹc 😂. Thao tác trên onchain của mình khi đó là master luôn rồi. Từ việc sign transaction(11), đến confirm hầu như các message nếu đã decode thì không sao, không decode mình tự decode luôn. Có 1 lần mình từng suýt nữa confirm 1 message approve unlimited token. Nhờ có kiến thức vững nên mình đã đọc kỹ message và tránh được 1 vụ hack. Đó là lý do mình tự tin không sợ thằng hacker nào 😎\n- 🍻 Thời điểm này mình cũng có join vào 1 số dự án freelance về Web3, và 1 ngày đẹp trời mình đi trip cùng với team, trong lúc vui mình uống vài lon làm lân lân cái đầu và sau đó về phòng mở máy ra làm việc. Thì có 1 thằng bên USA nhắn trên platform freelance bảo cần mình hỗ trợ fix bug trên Dapps của hắn với 1 khoản budget cũng ngon. Trước đó thì mình đã làm nhiều dự án rồi, nên lần này cũng như mọi lần khác. Click vào link Bitbucket clone resource về và theo từng step thằng đó gửi qua để chạy source.\n- ⚡ Trong cơn lân lân, chill chill 😂. Mình install 1 số lệnh nó gửi, căn bản là lệnh khá lạ. Nhưng khi đó mình vẫn chủ quan. Đến khi MacBook mình hiện 1 số alert kiểu hệ thống, là mình kịp nhận ra source này không ổn. Thì ngay lập tức mình đã ngắt kết nối, và remove source ra khỏi máy. Check lại toàn bộ ví và đùng, mọi thứ vẫn an toàn, chẳng mất gì cả. Khi đó mình cũng khá bình tĩnh vì dù gì các ví đang active trên wallet hầu như cao nhất cũng 3-10$ (chủ yếu để làm gas(12)). Mình nghĩ nếu bị hack rồi thì hacker nó cũng không chê 3$ đâu. Lần đầu 3$ MATIC nó còn bào được mà 😂 Nên là mình chủ quan không clean máy.\n- 😓 Dĩ nhiên, điều gì đến cũng đến. Sau đó khoảng 15 ngày mình có nạp 1 lượng token STG để làm airdrop(13). Thì mọi thứ vẫn diễn ra khá suôn sẻ, cho đến khi hoàn thành các thao tác mình tắt máy và sáng hôm sau mở lên thì lượng STG và 1 ít USDC đã bị mất 🥲 Lần này giá trị mất không bằng lần đầu. Nhưng mình cay cú là sao mình có thể bị mất được. Kiến thức cũng nắm khá vững rồi mà. Nhưng đâu lại vào đó. Lại thẫn thờ tý và tiếp tục bỏ cái ví đó 😔\n\n⚠️ **Bài học rút ra: Khi có 1 hành động nào thấy bất thường trên máy thì ngay lập tức phải chuyển toàn bộ token của toàn bộ ví về 1 ví mới hoàn toàn và reset lại máy. Cái thông minh của hack ở đây là họ không rút tiền nhỏ lẻ mà đợi khi wallet có giá trị 1 khoảng nhất định con bot mới bắt đầu rút tiền. Tiếp tục 1 bài học xương máu 😞 Đặc biệt là đừng có hành động gì khi đang say, hậu quả khôn lường 🤦‍♂️**\n\n![Hack Image](hack-logo.png)\n\n## 📉 Lần Thứ 3: (10/2024) (Token bị mất là Base ETH)\n\n- 🧩 Riêng lần này mình muốn kể ngắn gọn xíu tại vì nó liên quan tới smart contract(14) (tech). Thì căn bản là thường trên DexScreener (platform tổng hợp các meme token) luôn hiển thị lượng token top volume mỗi ngày. Và thỉnh thoảng mình sẽ dành 1 lượng token bên Base chain để mua bán memecoin(15) trên chain(16) này. Dĩ nhiên lượng giá trị mua meme là không nhiều. Thì trong lúc đó mình thấy 1 số lượng meme coin mới tạo có volume cao. Nên mình đã swap(17) 1 meme coin. Và đùng trong khi đã mất ETH nhưng token mình mua không chuyển về ví. Sau khi kiểm tra trên explorer mình thấy đây là 1 token scam.\n- 🚨 Và phải nói token scam hiện nay có nhơn nhởn trên blockchain, tập trung chủ yếu vào memecoin. Nói sâu process hack lần này thì cơ bản là: Mình đặt token scam đó là A. Token A này mình mua thông qua Uniswap V3 dex. Thì token A đã chuyển vào ví mình, nhưng sau đó 1s nó sẽ tự chuyển vào lại smart contract của token. Kiểu đi chợ đưa tiền mua bó rau, bà bán rau đưa mình chạm vào bó rau lấy mùi cái rồi bả giựt lại á. Bình thường thì mình lấy lại được liền bó rau đó. Nhưng trên blockchain thì không bao giờ nha 😭\n- 🔍 Lần này ví mình không bị hack, mà hack ở đây là mua nhầm token scam. Và đây cũng chỉ là 1 trong những loại token scam trên thị trường thôi. Hiện nay thì có 1 số trang có thể check được tính hợp lệ của token. Nên trước khi swap token nào đó, có thể copy contract để check trước đảm bảo an toàn.\n\n⚠️ **Bài học rút ra: Trên thị trường DEX thì luôn luôn check trước contract trước khi integrate(17) với contract đó. Thế thôi.**\n\n## 🤦‍♂️ Lần Thứ 4: (12/2024) (Token bị mất là Wormhole)\n\n- 😅 Lần này có lẽ là lần đặc biệt nhất, vì chính mình tự hack mình 😂. Nói vui thế thôi, nhưng câu chuyện vẫn là bảo mật. Căn bản nếu 1 ai đó chọn lưu trữ tài sản trên onchain thì thường họ có khoảng 3-4 ví là đủ lưu rồi. Tương đương với việc họ phải lưu 3-4 mnemonic.\n- 📱 Còn mình thì vừa lưu trữ và vừa làm việc nên số lượng ví mình tiếp xúc mỗi ngày có thể lên tới hàng chục ví. Và dĩ nhiên các ví mình lưu trữ luôn riêng biệt ghi bằng giấy bút. Câu chuyện mình muốn nói ở đây là các ví làm việc hoặc làm airdrop. Thì thường mình sẽ vẫn lưu trữ ví qua iCloud. Dĩ nhiên là có nhiều lớp bảo vệ (3-4 lớp) cá nhân của mình để ví dụ iCloud bị hack, thì hacker cũng không dễ gì lấy được những ví đó của mình. Chuyện đến đây thì nói chung là hoàn hảo, an toàn tuyệt đối.\n- 😱 Nhưng 1 ngày vẫn rất là đẹp trời, mình chuyển lượng token Wormhole của mình qua 1 ví mới để tối ưu airdrop. Và 1 thao tác ố dề được ghi chú là copy mnemonic mới đặt tên là: stake Wormhole 2. Mọi thứ vẫn chưa có gì cho đến khi mình nghĩ mình vô tình paste mnemonic ví mới vào ví cũ: stake Wormhole 1. Và không để ý sự khác biệt (do trong list có quá nhiều mnemonic). Thì gần đây mình reset lại máy. Mình nghĩ mọi thứ đã an toàn rồi thì ố dề lần nữa, sao 2 ví stake Wormhole lại giống nhau mnemonic 😭. Mà đặc biệt hơn ví cũ đã được Wormhole airdrop cho 1 lượng token khá khá. Vào ngày 14-4 mình dự định sẽ claim các token này. Và thế là mình vừa giúp Wormhole burn được 1 lượng token 🥲 Oh shit man 😢, giỡn mẹt hả 😭\n\n⚠️ **Bài học rút ra: Dùng ít ví lại, dùng nhiều quá sẽ bị lú luôn. Cái này là tự mình hack mình đúng nghĩa đen 😅**\n\n\u003C!-- ![Cry Image](cry-baby.jpeg) -->\n\n## 📌 Tổng Kết\n\nSau 4 lần mất tiền này thì chẳng còn gì để nói hơn nữa. Mình vẫn còn phải học dài dài về sự cẩn thận hơn, an toàn hơn trong việc bảo vệ ví trên onchain. Với những ai không rành về công nghệ thì thôi đừng nên qua onchain luôn cho đỡ đau đầu.\n\nVà bạn có thể thấy rằng căn bản của mọi công nghệ đều phụ thuộc vào chính con người. Lần lượt các lần hack nguyên nhân đi từ kém công nghệ => sự bất cẩn. Nói chung là cạn phước lắm mới dùng onchain đó mà (just kidding 😅).\n\nBlog này kết thúc tại đây, hy vọng những bài học của mình sẽ giúp bạn tránh khỏi những tổn thất không đáng có trong blockchain. Hôm nay đi nhậu cái cho đỡ buồn. Vừa viết blog vừa khóc 😢\n\n## Một số keyword: \n- **1.CEX**: Sàn tập trung, trung gian quản lý ví (Binance).\n- **2.DEX**: Sàn phi tập trung, tự quản lý ví (Uniswap).\n- **3.Mnemonic**: Chuỗi từ khôi phục ví (12/24 từ).\n- **4.Onchain**: Hoạt động trực tiếp trên blockchain.\n- **5.Ethereum Explorer**: Công cụ tra cứu giao dịch Ethereum (Etherscan).\n- **6.EVM**: Máy ảo chạy smart contract trên Ethereum.\n- **7.Polygon**: Layer2 của ETH là 1 blockchain nhanh, rẻ, hỗ trợ Ethereum.\n- **8.Wallet**: Ví lưu trữ crypto (Metamask, Ledger).\n- **9.Dapps**: Ứng dụng phi tập trung trên blockchain.\n- **10.Crosschain**: Chuyển tài sản giữa các blockchain.\n- **11.Sign Transaction**: Ký xác nhận giao dịch bằng khóa riêng.\n- **12.Gas**: Phí giao dịch trên blockchain.\n- **13.Airdrop**: Phát token miễn phí.\n- **14.Smart Contract**: Code tự động trên blockchain.\n- **15.Memecoin**: Coin dựa trên meme (Dogecoin).\n- **16.Chain**: Blockchain (Ethereum, Polygon).\n- **17.Swap**: Đổi token (ETH sang USDT).\n- **18.Integrate**: Kết nối với hệ thống (ví với Dapp).\n\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>","src/content/post/summary-of-hacked-times/index.md",[245,246],"header.jpg","hack-logo.png","8ba335927b970ae7",{"html":249,"metadata":250},"\u003Ch1 id=\"-3-lần-tôi-bị-hack-ví-như-thế-nào\">🔐 3 Lần Tôi Bị Hack Ví Như Thế Nào?\u003C/h1>\n\u003Cp>Đây là một blog không viết về tech, nhưng cũng là trải nghiệm cá nhân mình trong quá trình làm việc cũng như đầu tư trong mảng blockchain. Đây là một số bài học cá nhân mình nhận ra và mọi bài học đều phải trả bằng tiền 😢. Giờ thì đi sâu vào những câu chuyện thôi. Let’s go.\u003C/p>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;header.jpg&#x22;,&#x22;alt&#x22;:&#x22;Header Image&#x22;,&#x22;index&#x22;:0}\">\n\u003Ch2 id=\"-lần-thứ-nhất-06-2022-token-bị-hack-là-matic-và-eth\">💥 Lần Thứ Nhất: (06-2022) (Token bị hack là MATIC và ETH)\u003C/h2>\n\u003Cul>\n\u003Cli>🔍 Để mà nói thì đây là khoảng thời gian đầu mình bước vào lĩnh vực blockchain nói chung và thị trường crypto nói riêng, thời gian này kiến thức về blockchain và crypto của mình khá sơ khai. Căn bản lúc đó mình làm việc chỉ là bề nổi li ti trên thị trường, biết một chút về cách chuyển token từ sàn CEX (1) qua DEX (2) và ngược lại. Đây cũng là kiến thức vô cùng căn bản và quan trọng. Khi đấy hình dung của mình về thị trường và tính bảo mật của thị trường còn khá ngây ngô và đơn giản.\u003C/li>\n\u003Cli>📝 Thời điểm này cách lưu trữ ví &#x3C;mnemonic (3): 12 ký tự> của mình chủ yếu là viết trong 1 file Word 😅 Giờ mà nghĩ lại thật là buồn cười. Mình cũng có nghe qua một số lời khuyên nên take note ra giấy nhưng khi đó mình làm việc trên onchain(4) thường không nhiều nên mình cũng không chú ý lắm.\u003C/li>\n\u003Cli>🖥️ Và một ngày đẹp trời đến, nói thêm nữa là khi đó mình xài máy tính Windows (unsafe on blockchain). Mình đã install 1 phần mềm edit video (Camtasia Studio) nhờ đươc 1 thằng bạn thân tên Nhân lùa, tý tag nó luôn 😅. Dĩ nhiên đó là bản crack 😅 bởi nghèo mà. Và sau đó thật thú vị khi máy tính mình lag như chưa từng được lag 😂. Mình nhớ là thời điểm này ví vẫn chưa bị hack, có thể 1 vài nguyên nhân nào đó về tech từ hacker.\u003C/li>\n\u003Cli>🔄 Sau đó, quyết định đầy “thông minh” của mình là cài đặt lại Win và mình đã upload file Word chứa mnemonic lên Google Drive. Khi đó trong ví mình có khoảng 3 Matic (hiện tại Matic đổi thành POL), ~ giá trị tầm 3$. Vì giá trị không lớn nên mình cũng không để ý (lúc này là hacker đã lấy được 12 ký tự mnemonic thông qua việc upload file Word lên Google Drive và rút 3 Matic, nhưng mình không biết).\u003C/li>\n\u003Cli>💸 Vào khoảng 1 tuần sau ( cuối tháng 07/2022) mình có chuyển 1 lượng ETH vào ví này để lưu trữ và “đùng” sau khi vừa thấy ETH hiện trong ví Metamask, thì khoảng 1s sau lượng token đó biến mất.\u003C/li>\n\u003Cli>😱 Khi đấy mình còn nghĩ do network lag và mình đợi 1’-2’ vẫn không thấy đâu. Thì khi check trên Ethereum explorer (5), mình thấy token đó đã chuyển qua 1 ví khác. Ố dề luôn, thẫn thờ 1 tý thì mình check lại toàn bộ các transaction trên toàn bộ các chain của EVM (6), và mình phát hiện ra ví của mình đã bị hack trên chain Polygon(7) hơn 1 tuần rồi, mợt mõi mà. Thế là đóng máy rồi một nụ cười tươi, cài Win lần nữa và không quên bye bye cái ví vừa bị hack 😅\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>NOTE: *** các ví mà đã bị auto rút tiền mà mình k can thiệp nghĩa là mình đã mất ví. không còn cách nào lấy lại đươc nhé ***\u003C/li>\n\u003C/ul>\n\u003Cp>⚠️ \u003Cstrong>Bài học trong vụ hack này là đừng bao giờ cài phần mềm crack và lưu trữ ví trên file Word. Đặc biệt là hạn chế dùng Windows laptop nếu bạn đang join vào thị trường crypto.\u003C/strong>\u003C/p>\n\u003Ch2 id=\"-lần-thứ-2-092023-token-bị-hack-là-stg--usdc\">🔥 Lần Thứ 2: (09/2023) (Token bị hack là STG + USDC)\u003C/h2>\n\u003Cul>\n\u003Cli>📄 Sau vụ hack lần 1, mình đã rút ra bài học đầy sâu sắc là viết 12 ký tự (mnemonic) vào giấy liền 😅 Mình cảm thấy nó thật sự an toàn. Chỉ có điều mỗi lần muốn import vào wallets(8) thì hơi mất thời gian xíu, bên cạnh đó, mình cũng đã không sử dụng máy Windows khi làm việc với blockchain.\u003C/li>\n\u003Cli>📚 Thời điểm này kiến thức về blockchain và crypto của mình đã được củng cố đi rất nhiều. Nên mình cũng khá tự tin về việc thao tác với các Dapps(9), hoặc chuyển tiền trên các crosschain(10) hiện tại. Nói chung khi đó là bố của tự tin luôn, ai cần là chỉ rẹc rẹc 😂. Thao tác trên onchain của mình khi đó là master luôn rồi. Từ việc sign transaction(11), đến confirm hầu như các message nếu đã decode thì không sao, không decode mình tự decode luôn. Có 1 lần mình từng suýt nữa confirm 1 message approve unlimited token. Nhờ có kiến thức vững nên mình đã đọc kỹ message và tránh được 1 vụ hack. Đó là lý do mình tự tin không sợ thằng hacker nào 😎\u003C/li>\n\u003Cli>🍻 Thời điểm này mình cũng có join vào 1 số dự án freelance về Web3, và 1 ngày đẹp trời mình đi trip cùng với team, trong lúc vui mình uống vài lon làm lân lân cái đầu và sau đó về phòng mở máy ra làm việc. Thì có 1 thằng bên USA nhắn trên platform freelance bảo cần mình hỗ trợ fix bug trên Dapps của hắn với 1 khoản budget cũng ngon. Trước đó thì mình đã làm nhiều dự án rồi, nên lần này cũng như mọi lần khác. Click vào link Bitbucket clone resource về và theo từng step thằng đó gửi qua để chạy source.\u003C/li>\n\u003Cli>⚡ Trong cơn lân lân, chill chill 😂. Mình install 1 số lệnh nó gửi, căn bản là lệnh khá lạ. Nhưng khi đó mình vẫn chủ quan. Đến khi MacBook mình hiện 1 số alert kiểu hệ thống, là mình kịp nhận ra source này không ổn. Thì ngay lập tức mình đã ngắt kết nối, và remove source ra khỏi máy. Check lại toàn bộ ví và đùng, mọi thứ vẫn an toàn, chẳng mất gì cả. Khi đó mình cũng khá bình tĩnh vì dù gì các ví đang active trên wallet hầu như cao nhất cũng 3-10$ (chủ yếu để làm gas(12)). Mình nghĩ nếu bị hack rồi thì hacker nó cũng không chê 3$ đâu. Lần đầu 3$ MATIC nó còn bào được mà 😂 Nên là mình chủ quan không clean máy.\u003C/li>\n\u003Cli>😓 Dĩ nhiên, điều gì đến cũng đến. Sau đó khoảng 15 ngày mình có nạp 1 lượng token STG để làm airdrop(13). Thì mọi thứ vẫn diễn ra khá suôn sẻ, cho đến khi hoàn thành các thao tác mình tắt máy và sáng hôm sau mở lên thì lượng STG và 1 ít USDC đã bị mất 🥲 Lần này giá trị mất không bằng lần đầu. Nhưng mình cay cú là sao mình có thể bị mất được. Kiến thức cũng nắm khá vững rồi mà. Nhưng đâu lại vào đó. Lại thẫn thờ tý và tiếp tục bỏ cái ví đó 😔\u003C/li>\n\u003C/ul>\n\u003Cp>⚠️ \u003Cstrong>Bài học rút ra: Khi có 1 hành động nào thấy bất thường trên máy thì ngay lập tức phải chuyển toàn bộ token của toàn bộ ví về 1 ví mới hoàn toàn và reset lại máy. Cái thông minh của hack ở đây là họ không rút tiền nhỏ lẻ mà đợi khi wallet có giá trị 1 khoảng nhất định con bot mới bắt đầu rút tiền. Tiếp tục 1 bài học xương máu 😞 Đặc biệt là đừng có hành động gì khi đang say, hậu quả khôn lường 🤦‍♂️\u003C/strong>\u003C/p>\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;hack-logo.png&#x22;,&#x22;alt&#x22;:&#x22;Hack Image&#x22;,&#x22;index&#x22;:0}\">\n\u003Ch2 id=\"-lần-thứ-3-102024-token-bị-mất-là-base-eth\">📉 Lần Thứ 3: (10/2024) (Token bị mất là Base ETH)\u003C/h2>\n\u003Cul>\n\u003Cli>🧩 Riêng lần này mình muốn kể ngắn gọn xíu tại vì nó liên quan tới smart contract(14) (tech). Thì căn bản là thường trên DexScreener (platform tổng hợp các meme token) luôn hiển thị lượng token top volume mỗi ngày. Và thỉnh thoảng mình sẽ dành 1 lượng token bên Base chain để mua bán memecoin(15) trên chain(16) này. Dĩ nhiên lượng giá trị mua meme là không nhiều. Thì trong lúc đó mình thấy 1 số lượng meme coin mới tạo có volume cao. Nên mình đã swap(17) 1 meme coin. Và đùng trong khi đã mất ETH nhưng token mình mua không chuyển về ví. Sau khi kiểm tra trên explorer mình thấy đây là 1 token scam.\u003C/li>\n\u003Cli>🚨 Và phải nói token scam hiện nay có nhơn nhởn trên blockchain, tập trung chủ yếu vào memecoin. Nói sâu process hack lần này thì cơ bản là: Mình đặt token scam đó là A. Token A này mình mua thông qua Uniswap V3 dex. Thì token A đã chuyển vào ví mình, nhưng sau đó 1s nó sẽ tự chuyển vào lại smart contract của token. Kiểu đi chợ đưa tiền mua bó rau, bà bán rau đưa mình chạm vào bó rau lấy mùi cái rồi bả giựt lại á. Bình thường thì mình lấy lại được liền bó rau đó. Nhưng trên blockchain thì không bao giờ nha 😭\u003C/li>\n\u003Cli>🔍 Lần này ví mình không bị hack, mà hack ở đây là mua nhầm token scam. Và đây cũng chỉ là 1 trong những loại token scam trên thị trường thôi. Hiện nay thì có 1 số trang có thể check được tính hợp lệ của token. Nên trước khi swap token nào đó, có thể copy contract để check trước đảm bảo an toàn.\u003C/li>\n\u003C/ul>\n\u003Cp>⚠️ \u003Cstrong>Bài học rút ra: Trên thị trường DEX thì luôn luôn check trước contract trước khi integrate(17) với contract đó. Thế thôi.\u003C/strong>\u003C/p>\n\u003Ch2 id=\"️-lần-thứ-4-122024-token-bị-mất-là-wormhole\">🤦‍♂️ Lần Thứ 4: (12/2024) (Token bị mất là Wormhole)\u003C/h2>\n\u003Cul>\n\u003Cli>😅 Lần này có lẽ là lần đặc biệt nhất, vì chính mình tự hack mình 😂. Nói vui thế thôi, nhưng câu chuyện vẫn là bảo mật. Căn bản nếu 1 ai đó chọn lưu trữ tài sản trên onchain thì thường họ có khoảng 3-4 ví là đủ lưu rồi. Tương đương với việc họ phải lưu 3-4 mnemonic.\u003C/li>\n\u003Cli>📱 Còn mình thì vừa lưu trữ và vừa làm việc nên số lượng ví mình tiếp xúc mỗi ngày có thể lên tới hàng chục ví. Và dĩ nhiên các ví mình lưu trữ luôn riêng biệt ghi bằng giấy bút. Câu chuyện mình muốn nói ở đây là các ví làm việc hoặc làm airdrop. Thì thường mình sẽ vẫn lưu trữ ví qua iCloud. Dĩ nhiên là có nhiều lớp bảo vệ (3-4 lớp) cá nhân của mình để ví dụ iCloud bị hack, thì hacker cũng không dễ gì lấy được những ví đó của mình. Chuyện đến đây thì nói chung là hoàn hảo, an toàn tuyệt đối.\u003C/li>\n\u003Cli>😱 Nhưng 1 ngày vẫn rất là đẹp trời, mình chuyển lượng token Wormhole của mình qua 1 ví mới để tối ưu airdrop. Và 1 thao tác ố dề được ghi chú là copy mnemonic mới đặt tên là: stake Wormhole 2. Mọi thứ vẫn chưa có gì cho đến khi mình nghĩ mình vô tình paste mnemonic ví mới vào ví cũ: stake Wormhole 1. Và không để ý sự khác biệt (do trong list có quá nhiều mnemonic). Thì gần đây mình reset lại máy. Mình nghĩ mọi thứ đã an toàn rồi thì ố dề lần nữa, sao 2 ví stake Wormhole lại giống nhau mnemonic 😭. Mà đặc biệt hơn ví cũ đã được Wormhole airdrop cho 1 lượng token khá khá. Vào ngày 14-4 mình dự định sẽ claim các token này. Và thế là mình vừa giúp Wormhole burn được 1 lượng token 🥲 Oh shit man 😢, giỡn mẹt hả 😭\u003C/li>\n\u003C/ul>\n\u003Cp>⚠️ \u003Cstrong>Bài học rút ra: Dùng ít ví lại, dùng nhiều quá sẽ bị lú luôn. Cái này là tự mình hack mình đúng nghĩa đen 😅\u003C/strong>\u003C/p>\n\u003C!-- ![Cry Image](cry-baby.jpeg) -->\n\u003Ch2 id=\"-tổng-kết\">📌 Tổng Kết\u003C/h2>\n\u003Cp>Sau 4 lần mất tiền này thì chẳng còn gì để nói hơn nữa. Mình vẫn còn phải học dài dài về sự cẩn thận hơn, an toàn hơn trong việc bảo vệ ví trên onchain. Với những ai không rành về công nghệ thì thôi đừng nên qua onchain luôn cho đỡ đau đầu.\u003C/p>\n\u003Cp>Và bạn có thể thấy rằng căn bản của mọi công nghệ đều phụ thuộc vào chính con người. Lần lượt các lần hack nguyên nhân đi từ kém công nghệ => sự bất cẩn. Nói chung là cạn phước lắm mới dùng onchain đó mà (just kidding 😅).\u003C/p>\n\u003Cp>Blog này kết thúc tại đây, hy vọng những bài học của mình sẽ giúp bạn tránh khỏi những tổn thất không đáng có trong blockchain. Hôm nay đi nhậu cái cho đỡ buồn. Vừa viết blog vừa khóc 😢\u003C/p>\n\u003Ch2 id=\"một-số-keyword\">Một số keyword:\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>1.CEX\u003C/strong>: Sàn tập trung, trung gian quản lý ví (Binance).\u003C/li>\n\u003Cli>\u003Cstrong>2.DEX\u003C/strong>: Sàn phi tập trung, tự quản lý ví (Uniswap).\u003C/li>\n\u003Cli>\u003Cstrong>3.Mnemonic\u003C/strong>: Chuỗi từ khôi phục ví (12/24 từ).\u003C/li>\n\u003Cli>\u003Cstrong>4.Onchain\u003C/strong>: Hoạt động trực tiếp trên blockchain.\u003C/li>\n\u003Cli>\u003Cstrong>5.Ethereum Explorer\u003C/strong>: Công cụ tra cứu giao dịch Ethereum (Etherscan).\u003C/li>\n\u003Cli>\u003Cstrong>6.EVM\u003C/strong>: Máy ảo chạy smart contract trên Ethereum.\u003C/li>\n\u003Cli>\u003Cstrong>7.Polygon\u003C/strong>: Layer2 của ETH là 1 blockchain nhanh, rẻ, hỗ trợ Ethereum.\u003C/li>\n\u003Cli>\u003Cstrong>8.Wallet\u003C/strong>: Ví lưu trữ crypto (Metamask, Ledger).\u003C/li>\n\u003Cli>\u003Cstrong>9.Dapps\u003C/strong>: Ứng dụng phi tập trung trên blockchain.\u003C/li>\n\u003Cli>\u003Cstrong>10.Crosschain\u003C/strong>: Chuyển tài sản giữa các blockchain.\u003C/li>\n\u003Cli>\u003Cstrong>11.Sign Transaction\u003C/strong>: Ký xác nhận giao dịch bằng khóa riêng.\u003C/li>\n\u003Cli>\u003Cstrong>12.Gas\u003C/strong>: Phí giao dịch trên blockchain.\u003C/li>\n\u003Cli>\u003Cstrong>13.Airdrop\u003C/strong>: Phát token miễn phí.\u003C/li>\n\u003Cli>\u003Cstrong>14.Smart Contract\u003C/strong>: Code tự động trên blockchain.\u003C/li>\n\u003Cli>\u003Cstrong>15.Memecoin\u003C/strong>: Coin dựa trên meme (Dogecoin).\u003C/li>\n\u003Cli>\u003Cstrong>16.Chain\u003C/strong>: Blockchain (Ethereum, Polygon).\u003C/li>\n\u003Cli>\u003Cstrong>17.Swap\u003C/strong>: Đổi token (ETH sang USDT).\u003C/li>\n\u003Cli>\u003Cstrong>18.Integrate\u003C/strong>: Kết nối với hệ thống (ví với Dapp).\u003C/li>\n\u003C/ul>\n\u003Cstyle>\nimg {\n    border-radius: 25px;\n    width: 100%;\n}\n\u003C/style>",{"headings":251,"localImagePaths":273,"remoteImagePaths":274,"frontmatter":275,"imagePaths":279},[252,255,258,261,264,267,270],{"depth":91,"slug":253,"text":254},"-3-lần-tôi-bị-hack-ví-như-thế-nào","🔐 3 Lần Tôi Bị Hack Ví Như Thế Nào?",{"depth":32,"slug":256,"text":257},"-lần-thứ-nhất-06-2022-token-bị-hack-là-matic-và-eth","💥 Lần Thứ Nhất: (06-2022) (Token bị hack là MATIC và ETH)",{"depth":32,"slug":259,"text":260},"-lần-thứ-2-092023-token-bị-hack-là-stg--usdc","🔥 Lần Thứ 2: (09/2023) (Token bị hack là STG + USDC)",{"depth":32,"slug":262,"text":263},"-lần-thứ-3-102024-token-bị-mất-là-base-eth","📉 Lần Thứ 3: (10/2024) (Token bị mất là Base ETH)",{"depth":32,"slug":265,"text":266},"️-lần-thứ-4-122024-token-bị-mất-là-wormhole","🤦‍♂️ Lần Thứ 4: (12/2024) (Token bị mất là Wormhole)",{"depth":32,"slug":268,"text":269},"-tổng-kết","📌 Tổng Kết",{"depth":32,"slug":271,"text":272},"một-số-keyword","Một số keyword:",[245,246],[],{"title":236,"ogImage":76,"description":237,"publishDate":276,"updatedDate":276,"tags":277,"draft":18,"minutesRead":278},"07 Mar 2025",[241,21,74],"12 min read",[245,246],"summary-of-hacked-times/index.md"]